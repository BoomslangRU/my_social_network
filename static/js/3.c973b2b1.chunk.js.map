{"version":3,"sources":["components/Dialogs/DialogForm/DialogForm.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogForm/DialogsForm.module.css"],"names":["DialogForm","props","onSubmit","e","massageBody","sendMessage","validate","errors","length","render","handleSubmit","className","s","railway","textarea","formRow","name","input","meta","placeholder","error","styleButton","buttonBlock","type","DialogItem","path","id","dialog","to","activeClassName","activeLink","Message","message","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogItem","compose","withAuthRedirect","connect","state","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React","module","exports"],"mappings":"mNA8CeA,EA1CI,SAACC,GAehB,OACI,cAAC,IAAD,CACIC,SAfS,SAACC,GACVA,EAAEC,aACNH,EAAMI,YAAYF,EAAEC,cAchBE,SAXS,SAACH,GACd,IAAMI,EAAS,GAIf,OAHIJ,EAAEC,aAAeD,EAAEC,YAAYI,OAAS,KAC1CD,EAAOH,YAAc,0CAEhBG,GAOHE,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACJ,sBAAMC,UAAWC,IAAEC,QAASX,SAAUQ,EAAtC,SACI,sBAAKC,UAAWC,IAAEE,SAAlB,UACI,qBAAKH,UAAWC,IAAEG,QAAlB,SACI,cAAC,IAAD,CAAOC,KAAK,cACRP,OAAQ,gBAAGQ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACJ,gCACI,oDAAcD,GAAd,IAAqBE,YAAY,wBAChCD,EAAKE,OAAS,qBAAKT,UAAWC,IAAEQ,MAAlB,SAA0BF,EAAKE,gBAK9D,qBAAKT,UAAWU,IAAYC,YAA5B,SACI,wBAAQX,UAAWC,IAAEG,QAASQ,KAAK,SAAnC,oC,wBCxBbC,EAVI,SAACvB,GAChB,IAAIwB,EAAO,YAAcxB,EAAMyB,GAE/B,OACI,qBAAKf,UAAWC,IAAEe,OAAlB,SACI,cAAC,IAAD,CAASC,GAAIH,EAAMI,gBAAiBjB,IAAEkB,WAAtC,SAAmD7B,EAAMe,UCFtDe,EAJC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,qBAAKrB,UAAWC,IAAEoB,QAAlB,SAA4BA,KCoBxBC,EAjBC,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAa7B,EAAiB,EAAjBA,YACvB8B,EAAkBD,EAAYE,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBU,GAAIY,EAAEZ,IAAZY,EAAEZ,OAChFa,EAAmBL,EAAYM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAST,QAASS,EAAET,SAAcS,EAAEf,OAEzF,OACI,sBAAKf,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAE8B,WAAlB,SACKP,IAEL,sBAAKxB,UAAWC,IAAE4B,SAAlB,UACKD,EACD,cAAC,EAAD,CAAYlC,YAAaA,WCN1BsC,sBACXC,IACAC,aAPkB,SAACC,GAAD,MAAY,CAC9BZ,YAAaY,EAAMZ,eAMM,CAAE7B,kBAFhBsC,CAGbV,I,mJCVEc,EAA6B,SAACD,GAAD,MAAY,CACzCE,OAAQF,EAAMG,KAAKD,SAGVJ,EAAmB,SAACM,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKnD,MAAM+C,OACT,cAACE,EAAD,eAAeE,KAAKnD,QADI,cAAC,IAAD,CAAU2B,GAAG,eAHT,GACXyB,IAAMH,WAOtC,OADqCL,YAAQE,EAARF,CAAoCM,K,mBCd7EG,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,WAAa,4BAA4B,SAAW,4B,mBCAlJD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,MAAQ,2BAA2B,QAAU","file":"static/js/3.c973b2b1.chunk.js","sourcesContent":["import { Form, Field } from 'react-final-form'\r\nimport s from './DialogsForm.module.css'\r\nimport styleButton from '../../../styles/styleButton.module.css'\r\n\r\nconst DialogForm = (props) => {\r\n\r\n    const onSubmit = (e) => {\r\n        if (e.massageBody) {\r\n        props.sendMessage(e.massageBody)\r\n        }\r\n    }\r\n    const validate = (e) => {\r\n        const errors = {}\r\n        if (e.massageBody && e.massageBody.length > 80) {\r\n          errors.massageBody = 'massages must not exceed 80 characters'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={validate}\r\n            render={({ handleSubmit }) => (\r\n                <form className={s.railway} onSubmit={handleSubmit}>\r\n                    <div className={s.textarea}>\r\n                        <div className={s.formRow}>\r\n                            <Field name='massageBody'\r\n                                render={({ input, meta }) => (\r\n                                    <div>\r\n                                        <textarea {...input} placeholder='Enter your massage' />\r\n                                        {meta.error && <div className={s.error}>{meta.error}</div>}\r\n                                    </div>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <div className={styleButton.buttonBlock}>\r\n                            <button className={s.formRow} type='submit'>Add Message</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DialogForm","import { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\nconst Message = ({ message }) => {\r\n    return <div className={s.message}>{message}</div>\r\n}\r\n\r\nexport default Message","import DialogForm from './DialogForm/DialogForm'\r\nimport DialogItem from './DialogItem/DialogsItem'\r\nimport Message from './Message/Message'\r\nimport s from './Dialogs.module.css'\r\n\r\n\r\nconst Dialogs = ({dialogsPage, sendMessage}) => {\r\n    let dialogsElements = dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElements = dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <DialogForm sendMessage={sendMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { sendMessage } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage\r\n})\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { sendMessage })\r\n)(Dialogs)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__4NYWR\",\"dialogItem\":\"Dialogs_dialogItem__3S-bA\",\"activeLink\":\"Dialogs_activeLink__2D52P\",\"messages\":\"Dialogs_messages__3_5Ec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"DialogsForm_textarea__20T3C\",\"error\":\"DialogsForm_error__3sIgi\",\"formRow\":\"DialogsForm_formRow__1Mtoy\"};"],"sourceRoot":""}